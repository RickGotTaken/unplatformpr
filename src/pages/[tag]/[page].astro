---
import type { GetStaticPathsOptions, Page } from "astro";
import { getCollection } from "astro:content";
import dayjs from "dayjs";
import Paginator from "../../components/Paginator.astro";
import IssueList from "../../components/IssueList.astro";
import Main from "../../layouts/Main.astro";
import { map } from "zod";
import type { Issue } from "fts-types";
import type { CollectionEntry } from "astro:content";

export const prerender = true

interface Props {
	page: Page;
	tag: string;
}

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
	const issueCollection = await getCollection("issues");
	const tags = Array.from(
		new Set(issueCollection.map((issue) => issue.data.tags).flat(1))
	).sort();

	return tags.flatMap((tag) => {
		const filteredIssues = issueCollection.filter((issue) =>
			issue.data.tags?.includes(tag ?? "")
		);
		return paginate(filteredIssues, {
			params: { tag },
			pageSize: 6,
		});
	});
}

// All paginated data is passed on the "page" prop
const { page } = Astro.props;
const { tag } = Astro.params;
---

<Main
	title={tag ?? "Issues"}
	description={`Issues tagged with "${tag ?? "something"}".`}
	class="px-[2vw]"
>
	<IssueList page={page} />
	<Paginator page={page} />
</Main>
